
<style>
.truth-table{
    white-space:pre;
}

</style>

<!--Unicode adder buttons-->
<div id="Button-holder">
    <button @onmousedown=@(e => AppendToInput("⊕")) @onmousedown:preventDefault>⊕</button>
    <button @onmousedown=@(e => AppendToInput("→")) @onmousedown:preventDefault>→</button>
    <button @onmousedown=@(e => AppendToInput("⊃")) @onmousedown:preventDefault>⊃</button>
    <button @onmousedown=@(e => AppendToInput("↔")) @onmousedown:preventDefault>↔</button>
</div>

<br/>
<input type="text" id="expression-input" placeholder="Enter your expression here..." @bind="@UserInput" @bind:event="oninput" @onkeypress="@(e => Enter(e))"/>
<button @onclick="@CalcTruthTable">Solve</button>
<input type="checkbox" @bind="@AlwaysSolve"/><text>realtime(press space after entering)</text>
<br/>
<p class="truth-table" style="@TtStyle">@TruthTableResult</p>


@code {

    public bool AlwaysSolve = false;

    public string UserInput = "";

    public string TruthTableResult = "";

    public string TtStyle = "";

    public void AppendToInput(string input) => UserInput += input;


    public void CalcTruthTable()
    {
        TruthTableResult = "Loading... this may take a moment.";
        try
        {
            var truthTable = new TruthTableSolver(new TruthExpression(UserInput));
            var res = truthTable.SolveToString();
            TruthTableResult = res;
            TtStyle = "color:black";
        }
        catch (InvalidTruthExpressionException e)
        {
            TruthTableResult = "Oops! It looks like there was an issue in your expression. Here's what I could figure out:\n" + e.Message;
            TtStyle = "color:red";
        }
        catch (Exception e)
        {
            TruthTableResult = "Oops! It looks like there was an issue. Here's what I could figure out:\n" + e.Message;
            TtStyle = "color:red";
        }
    }

    public void Enter(KeyboardEventArgs e)
    {
        if(AlwaysSolve)
        {
            
            CalcTruthTable();
        }
        else if(e.Key == "Enter")
        {
            CalcTruthTable();
        }
    }

}
